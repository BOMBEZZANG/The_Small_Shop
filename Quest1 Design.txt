### ## 1단계: '고물 분해기' 튜토리얼 구현

가장 먼저 플레이어가 돈을 벌 수 있는 핵심 수단인 '고물 분해기'를 얻는 과정을 만듭니다. 이는 자연스러운 튜토리얼이 될 것입니다.

1.  **고장 난 분해기 배치**:
    * `InteractableObject.cs`를 상속받는 `BrokenDecomposer.cs` 스크립트를 새로 만듭니다.
    * 플레이어의 마당에 '고장 난 분해기' 역할을 할 오브젝트를 배치하고 `BrokenDecomposer` 컴포넌트를 붙입니다.
    * `interactionName`을 "고장난 분해기 조사하기"로 설정하고, 상호작용 시 "고철과 윤활유가 있으면 고칠 수 있을 것 같다."는 메시지를 출력하게 합니다.

2.  **수리 재료 획득**:
    * 마당 구석에 '고철', '윤활유' 아이템을 배치합니다. 이 아이템들도 `InteractableObject`로 만들어 바로 주울 수 있게 합니다. (`InteractionType`을 `Collect`로 설정)
    * 각 아이템에 대한 `MaterialData` 에셋을 만듭니다. (제공해주신 `MaterialData.cs` 활용)

3.  **수리 및 첫 분해기 획득**:
    * `BrokenDecomposer`가 재료를 모두 가지고 있는지 `InventoryManager.instance.GetItemQuantity()`로 확인합니다.
    * 조건이 충족되면 분해기를 '수리된 분해기' 오브젝트로 교체하고, 이제부터 고철을 넣을 수 있게 합니다. 이 과정 자체가 첫 번째 작은 성취감을 줄 것입니다.

***

### ## 2단계: 돈벌기 핵심 루프 완성 (수집 → 분해 → 판매)

이제 분해기를 사용해 돈을 버는 핵심 과정을 완성합니다.

1.  **고철 수집**:
    * 마을 곳곳에 `InteractableObject`인 '고철 뭉치'를 배치합니다. 플레이어는 이걸 주워서 인벤토리로 가져옵니다. `InventoryManager.cs`가 잘 구현되어 있어 `AddItem` 호출만으로 충분합니다.

2.  **분해기에 고철 넣기**:
    * '수리된 분해기'와 상호작용하면, 인벤토리에 있는 '고철 뭉치'를 사용하고 분해기가 작동을 시작하게 합니다.
    * 분해기가 작동하는 동안 시각적인 효과(연기 파티클, 지지직거리는 소리 등)를 추가하여 "무언가 진행되고 있다"는 느낌을 줍니다.

3.  **가공된 재료 획득 및 판매**:
    * 일정 시간(예: 게임 시간 1시간, 실제 시간 30초)이 지나면 분해기에서 '가공된 철판', '구리 조각' 같은 새로운 재료가 나옵니다.
    * 이 재료들을 주워서 `창고+상점`에 있는 **판매 상자**에 넣습니다.
    * 다음 날 아침, `GoldManager.cs`의 `AddGold` 함수를 호출하여 판매 대금을 정산해 줍니다. `GameStatusUI.cs`가 자동으로 골드 UI를 업데이트할 것입니다.

***

### ## 3단계: 상점 및 '녹음기' 구매 기능 구현

첫 퀘스트의 목표인 '녹음기'를 돈으로 구매하는 과정을 만듭니다.

1.  **상점 NPC 생성**:
    * 마을에 상점 주인을 배치합니다. `ResidentNPCController.cs`를 사용하면 순찰이나 간단한 행동을 쉽게 구현할 수 있습니다.
    * 상점 주인에게 `DialogueData`를 연결하여 "어서 오게, 좋은 물건 많다네!" 같은 기본 대사를 설정합니다.

2.  **상점 UI 및 구매 로직**:
    * 상점 주인과 대화 시, 간단한 상점 UI를 띄웁니다.
    * UI에는 '녹음기' 아이템이 표시되고, 구매 버튼을 누르면 `GoldManager.instance.SpendGold()`를 호출하여 돈을 차감하고 `InventoryManager.instance.AddItem()`으로 녹음기를 지급합니다.

***

### ## 4단계: 첫 메인 퀘스트 전체 흐름 완성

이제 '고양이 말 번역기' 제작의 나머지 재료를 모으는 과정을 구현합니다.

1.  **'와이파이 안테나' 획득**:
    * 이장님 댁 지붕에 `InteractableObject`인 '와이파이 안테나'를 배치합니다.
    * 이장님 NPC와 대화하면 "지붕 정리를 도와주면 안테나를 주겠네"라는 **퀘스트성 대화**를 출력합니다.
    * 지붕에 있는 상자들을 미는 미니 퍼즐을 완성하면 안테나를 획득할 수 있게 합니다.

2.  **'오드아이 고양이 골골송' 녹음**:
    * 마을의 특정 고양이에게 '생선 통조림'(상점에서 구매)을 주면, 리듬 게임이 시작됩니다.
    * 리듬 게임 성공 시, '녹음된 골골송' 아이템을 획득합니다. 이때 인벤토리에 **녹음기**가 있는지 반드시 확인해야 합니다.

3.  **번역기 제작 및 퀘스트 완료**:
    * 플레이어의 `마당`에 있는 `작업대`에서 세 가지 재료('녹음기', '안테나', '골골송')를 조합합니다.
    * 재료가 모두 있으면 '고양이 말 번역기'가 제작되고, 퀘스트를 의뢰한 NPC에게 가져다주면 퀘스트가 완료됩니다.
    * 완료 보상으로 **경험치**를 지급합니다. `PlayerDataManager.instance.AddExp()`를 호출하면, `PlayerStatusUI.cs`가 자동으로 레벨/경험치 UI를 업데이트하고 레벨업 효과까지 보여줄 겁니다.

***

### ## 5단계: NPC 상호작용 및 스케줄링

마을에 생동감을 불어넣습니다.

* `VisitorNPCController.cs`를 활용하여 **퀘스트를 주는 방문객 NPC**를 구현합니다. 이 NPC는 특정 조건(예: 플레이어 레벨 5 달성)이 되면 마을에 나타나 퀘스트를 의뢰합니다.
* `ResidentNPCController.cs`와 `NPCSchedule` 클래스를 이용해 마을 주민들이 아침에는 밭에 가고, 저녁에는 집으로 돌아가는 등 시간대별로 다른 행동을 하게 만듭니다. `TimeManager.cs`의 `GetTimeOfDay()`가 유용하게 쓰일 겁니다.
* 에디터 툴인 `VisitorNPCPathEditor.cs`를 사용하여 방문객 NPC의 이동 경로를 시각적으로 쉽게 설정할 수 있습니다.

***

### ## 6단계: 폴리싱 및 테스트

이제 게임의 완성도를 높일 시간입니다.

* **UI 피드백 강화**: `InteractionUI.cs`를 활용해 상호작용 시 진행 바를 보여주거나, 요구 조건이 부족할 때 알려주는 등 시각적인 피드백을 강화합니다.
* **사운드 추가**: 아이템 획득, UI 클릭, NPC 대화 등에 사운드 이펙트를 추가합니다.
* **버그 테스트**: 위 과정들을 반복적으로 테스트하며 버그를 잡고, 플레이어의 동선이 어색하지 않은지 확인합니다.

이 순서대로 차근차근 개발하시면, 짜임새 있고 재미있는 첫 퀘스트 경험을 완성하실 수 있을 겁니다. 응원하겠습니다!